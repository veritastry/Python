print(response.request.meta.get('depth'),0)##拿到当前的深度
默认当前访问的深度是0
settings里面：
##限制深度
DEPTH_LIMIT=3


取到当前的访问的深度：
response.meta.get('depth')

DEPTH_LIMIT




封装成requets对象

调度器：只接受requets对象
里面只有requets对象
把url当做对象放进去，回调函数是parse

可迭代器对象__iter
生成器是有一种特殊的迭代器


默认是parse，返回的方式(迭代器）

scrapy来引擎爬虫中获取其始url
调用start_requets里来获取返回值
v=iter(返回值）

req全部放到调度器



可迭代对象：列表，可以去redis里面获取
特殊的迭代器： 生成器


深度和优先级：
深度：
最开始是0
每一次yield的时候，就可以depth+1（拿到当前的深度response.meta.get('depth',0))
深度控制：DEPTH_LIMIT当深度到达某一个值的时候，就不在迭代下去了
优先级：
请求被下载的优先级-=深度*优先级（配置）

配置：DFETH_PRORITY

优先级越大越优先下载
