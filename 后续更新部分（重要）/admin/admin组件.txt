
例子1：
list_display
这个是会在admin里面进行展示的多列（编辑页面的上一页）
list_display展示的不能是manytomany的字段，外键是可以展示的

当list-display里面写了外键的话，展示出来的是一个对象，要想展示出来想对应的值，所关联的外键的表必须要有返回值


例子2：
list_display_link=[]
这个是当点击那个lsit_display里面所展示的某一个字段的时候，就进去到编辑的页面，默认是第一个  把什么加进这个link里面的话  就可以指定那个字段，都是列表的形式，都可以加多个字段


例子3：
list_filter
过滤，可以按照什么字段来过滤，在admin的右边显示出来
这个list_filter这个表里面的什么字段都可以在这里筛选出来，包括外键，manytomany等字段  


例子4：
list-editable
这个是在外面就可以对字段进行编辑，不用点进去进行编辑



例子5：
list_searchfield
搜索的字段，这个会在上面生成一个搜索的input的框出来






批量操作：
    def   action_article(self,request,queryset):
        queryset.update(create_time='软件开发')
        #####注明一下，这个操作的字段必须是同种类型来可以进行操作，比如时间的话，格式是datafield的类型，所以进行平凉粗走的
        ##的时候，必须要按照这个格式来进行操作，否则会报错

    action_article.short_description = '改名'
    actions = [action_article]


原理讲解：
会在批量操作的部分加一个action，就是你命名的批量操作的名字，后面的字段是你要选择执行的字段（注意：这个批量操作的字段必须要按照这个规则来操作吗，否则会执行报错），批量操作  




例子6：
exclude=['user','room']
这个在admin里面的额编辑页面的时候，只会出现两个字段，只能对值两个字段进行编辑



例子7：
ordering=['id']
对id进行排序操作




















































