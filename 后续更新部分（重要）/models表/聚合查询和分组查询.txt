聚合分组：
models.Usrer.objects.all().annotate()
默认是按照这个id来分组的

如果是指定的话，就按照这个指定的分组
models.Usrer.objects.values("username").annotate(a=Avg("salary").values('dept','a')
这个是可以按照这个usrname来分组的，这个是已经指定的什么分组的方式
这个是按照这个username的来分组的，后面是注指定这个是工资的平均值
最后是取这个values是dept的值（这是最终的值）






原生的sql的语句:
这个sql的语句是这样写的：
select employee  user  Avg(employee  .salary) as a   FROM   employee  
group  by  employee .dept
这是sql的语句，是按照这个dept来分组，和上面的django的分组是一样的




原理讲解：
这个sql语句是按照这个工资来分组的,是取这个平均值，后面的values是最中取得这个值（在这个表里面取得这个值，这个就就是这个分组这最终取得
值，就是values()里面的值）
后面的order_by是按照什么来排序的，是降序还是这个升序
limit这个是限制对多少条数据，在这个得到的最终的值里面
args()这个是如果有参数的就可以传进去




左外关联：
select   * from  user  left join  dept   on   dept='保安部'  group  by dept  后面是更具什么来分组的，后面是分组的条件
这个是通过什么条件将这两个表关联起来，on的后面是相关联
的条件，是通过什么条件将会这个两个表关联起来











orm和values里面是什么字段的话，翻译成sql语句的话，也是这个
select的语句，相当于这个select什么字段


orm里面annotate前面是什么字段的话，就按照什么来分组,后面的annotate这个按照什么字段分组的值（每一个分组里面操作的值）











