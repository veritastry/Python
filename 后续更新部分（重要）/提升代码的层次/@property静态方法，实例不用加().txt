具体讲解一下：
这个如果在函数上面加了一个静态方法的话，当你实例的时候不用加（）
也可以进行实例化操作，拿到这个函数里面具体的某个值出来，注明一下，这个是在当前的函数里面不能可以不用加（）就可以进行实例化操作  




def b():
    return  'b'

class foo():
    @property
    def a(self):
        print('ok')
        return b()


obj=foo()
print(obj.a)
print(a)
###这样就拿到了这个fun2里面return的值，当你前面不写一个接受的变量的话，就拿不了这个接受到的值出来,只是进行了一步调用
#
# obj=F.fun1(121)
# print(obj)






####下面两种方法进行调用另一函数的值
obj=foo()
print(obj.a)



###foo是一个方法，当你加（）的时候就是一个类对象，可以进行实例化了，拿里面的函数了
obj=foo.a
print(obj)
'''
<function b at 0x0000027DC40FE840>
'''





当你没有加这个静态方法的时候，就需要加括号来进行实例化操作
obj=foo()
print(obj.a())