位运算
客户端：ws客户端所有的功能都在ws里面封装了
ws.send()

异或运算：
0，1:0
0,0:0
1,1:1
bin(9)  &  bin(19)  >>做异或运算




假设的原理解析:
(如果后面的4位（payload_len）是126的话，就是文档，就往后面加4字节
如果是小于126的话，就是图片，就加2字节
如果是127的话，就是视频，就往后面加8个字节（头部信息）)




 0 1 2 3 4 5 6 7这个代表一个字节 
info=b'\x84\x67\x78\x83\x21\x22\x12\x43\x12'
opcode =info[0]  &  15   与15（4个1）做与运算
74738743  &  00001111  》》00008743
fin=info[0]  >>7  向右边移动7位，就可以拿到这个第一位数了
74738743
00000007就是结果

payload_len=info[1]  & 127


if payload_len<126：数据头就这么长，只占2个字节，就是头部就是2个，mask_key是4个
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5   后面的全部都是数据了，数据头就只占那么几行
elif payload_len=126:  
就step 2 这个是往后面衍生4个字节，在2个字节的基础上再衍生4个字节，头部就占6个字节，后面加4个是mask_key
elif payload_len=127:
就step 3  如果是127的话，就往后面多占8个字节，头部就占10个字节，amsk_key是4个，后面就是数据了
客户端发消息有数据还有数据头信息

mask客户端发请求的的时候，永远是1，否则断开是0

数据部分的前4个字节是mask_key，数据部分不会全占，头部信息，mask_key，数据
这个数据是加密的，mask_key要进行解密（4个位）



拿数据：就是你占字节的基础上，后面再加4个字节，后面就是数据了
解密：
注明一下，曾如果要解密中文的话，因为中文是3个字节或者多少字节是一个中文，
而网上的是一个一个字节的解密，在转化为字符串，所以转化不了这个中文
如果要转化为中文的，就得一起解密，在转化为字符串，这样就可以显示出中文来了

全部解密成字节，在一起转化，不能一个一个的解密成字节，在一个一个的放进去，否则就还是
输出不了中文，全部都是字节在转化为字符串，就可以支持中文了





fin和opcode就可以判断这个消息
什么时候结束，接受消息的时候，有时候接受到一半，之后再接受一半，这两个
就可以判断这个消息什么时候结束
 0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-------+-+-------------+-------------------------------+
 |F|R|R|R| opcode|M| Payload len |    Extended payload length    |
 |I|S|S|S|  (4)  |A|     (7)     |             (16/64)           |
 |N|V|V|V|       |S|             |   (if payload len==126/127)   |
 | |1|2|3|       |K|             |                               |
 +-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +
 |     Extended payload length continued, if payload len == 127  |
 + - - - - - - - - - - - - - - - +-------------------------------+
 |                               |Masking-key, if MASK set to 1  |
 +-------------------------------+-------------------------------+
 | Masking-key (continued)       |          Payload Data         |
 +-------------------------------- - - - - - - - - - - - - - - - +
 :                     Payload Data continued ...                :
 + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
 |                     Payload Data continued ...                |
 +---------------------------------------------------------------+